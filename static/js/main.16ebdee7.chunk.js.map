{"version":3,"sources":["FinishedTask.jsx","TaskInput.jsx","App.jsx","index.js"],"names":["FinishedTask","onKeyDown","e","props","task","editTask","key","target","value","this","deleteTask","doneTask","className","contentEditable","autoFocus","defaultValue","isDone","onClick","icon","faEdit","faTrash","React","Component","TaskInput","state","JSON","parse","localStorage","getItem","tasks","newTask","handleKeyDown","copyState","id","uuidv4","setState","setItem","stringify","onNewTaskChange","filter","el","map","type","placeholder","onChange","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.16ebdee7.chunk.js","sourcesContent":["import React from 'react';\r\nimport { faTrash, faEdit } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\n\r\n\r\nclass FinishedTask extends React.Component {\r\n    onKeyDown = (e) => {\r\n        const { task, editTask } = this.props;\r\n        if (e.key === 'Enter') {\r\n            let editedTask = {\r\n                ...task,\r\n                task: e.target.value\r\n            };\r\n            editTask(editedTask);\r\n        }\r\n        if (e.key === 'Escape') {\r\n            editTask(task);\r\n        }\r\n    }\r\n    render() {\r\n        const { task, editTask, deleteTask, doneTask } = this.props;\r\n\r\n        return (\r\n            <li className=\"list-group-item\">\r\n                {task.contentEditable\r\n                    ? <input\r\n                        className=\"task active\"\r\n                        autoFocus={true}\r\n                        defaultValue={task.task}\r\n                        onKeyDown={this.onKeyDown}\r\n                    />\r\n                    : <p\r\n                        className={`task ${task.isDone ? 'done' : ''}`}\r\n                        onClick={() => { doneTask(task) }}\r\n                    >\r\n                        {task.task}\r\n                    </p>\r\n                }\r\n                <div className=\"buttons\">\r\n                    <button\r\n                        className=\"btn btn-outline-primary border-0 button-edit\"\r\n                        onClick={() => { editTask(task) }}\r\n                    >\r\n                        <FontAwesomeIcon icon={faEdit} />\r\n                    </button>\r\n                    <button\r\n                        className=\"btn btn-outline-danger border-0 button-delete\"\r\n                        onClick={() => { deleteTask(task); }}\r\n                    >\r\n                        <FontAwesomeIcon icon={faTrash} />\r\n                    </button>\r\n                </div>\r\n            </li>\r\n        )\r\n    }\r\n}\r\n\r\nexport default FinishedTask; ","import React from 'react';\r\nimport FinishedTask from './FinishedTask'\r\nimport { v4 as uuidv4 } from 'uuid';\r\n\r\nclass TaskInput extends React.Component {\r\n  state =\r\n    JSON.parse(localStorage.getItem('taskInputState')) ||\r\n    {\r\n      tasks: [],\r\n      newTask: ''\r\n    }\r\n\r\n  handleKeyDown = (e) => {\r\n    if (e.key === 'Enter') {\r\n      let copyState = {\r\n        tasks: [\r\n          ...this.state.tasks,\r\n          { task: this.state.newTask, id: uuidv4(), contentEditable: false, isDone: false }\r\n        ],\r\n        newTask: ''\r\n      };\r\n      this.setState(copyState);\r\n      localStorage.setItem('taskInputState', JSON.stringify(copyState));\r\n    }\r\n  }\r\n\r\n  onNewTaskChange = (e) => { \r\n    let task = e.target.value;\r\n    let copyState = {\r\n      tasks: [\r\n        ...this.state.tasks,\r\n      ],\r\n      newTask: task\r\n    };\r\n    this.setState(copyState);\r\n    localStorage.setItem('taskInputState', JSON.stringify(copyState));\r\n  }\r\n\r\n  deleteTask = (task) => {\r\n    let copyState = {...this.state, tasks: this.state.tasks.filter(el => el.id !== task.id)}\r\n    this.setState(copyState)\r\n    localStorage.setItem('taskInputState', JSON.stringify(copyState))\r\n  }\r\n\r\n  editTask = (task) => {\r\n    let copyState = {\r\n      ...this.state,\r\n      tasks: this.state.tasks.map(el => {\r\n        if (el.id === task.id) {\r\n          return { ...task, contentEditable: !task.contentEditable };\r\n        } else {\r\n          return { ...el, contentEditable: false };\r\n        }\r\n      })\r\n    };\r\n    this.setState(copyState);\r\n    localStorage.setItem('taskInputState', JSON.stringify(copyState));\r\n  }\r\n\r\n  doneTask = (task) => {\r\n    let copyState = {\r\n      ...this.state,\r\n      tasks: this.state.tasks.map(el => {\r\n        if (el.id === task.id) {\r\n          return { ...task, isDone: !task.isDone };\r\n        } else {\r\n          return el;\r\n        }\r\n      })\r\n    };\r\n    this.setState(copyState);\r\n    localStorage.setItem('taskInputState', JSON.stringify(copyState));\r\n  }\r\n\r\n\r\n  render() {\r\n    const { tasks, newTask } = this.state;\r\n\r\n    return (\r\n      <div className=\"container\">\r\n        <h1 className=\"text-muted\">Мой список дел</h1>\r\n        <input\r\n          type=\"text\"\r\n          className=\"form-control\"\r\n          placeholder=\"Добавьте новую задачу...\"\r\n          onChange={this.onNewTaskChange}\r\n          onKeyDown={this.handleKeyDown}\r\n          value={newTask}\r\n        />\r\n        <ul className=\"list-group\">\r\n          {tasks.map(task => (\r\n            <FinishedTask\r\n              key={task.id}\r\n              task={task}\r\n              deleteTask={this.deleteTask}\r\n              editTask={this.editTask}\r\n              doneTask={this.doneTask}\r\n            />\r\n          ))}\r\n        </ul>\r\n      </div>\r\n    )\r\n  };\r\n}\r\n\r\nexport default TaskInput;","import './App.css';\nimport TaskInput from './TaskInput.jsx';\nimport React from 'react';\n\nconst App = () => {\n  return (\n    <TaskInput />\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App.jsx';\n\n\n  ReactDOM.render(\n    <React.StrictMode>\n      <App />\n    </React.StrictMode>,\n    document.getElementById('root')\n  );\n\n"],"sourceRoot":""}